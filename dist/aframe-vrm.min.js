"use strict";class VRMAvatar{constructor(){this.model=null,this.mixer=null,this.bones={},this.blendShapes={},this.physics=null,this.collisionGroup=2,this.t={},this.i=new THREE.Quaternion,this.s=new THREE.Vector3(0,0,-1),this.h=new THREE.Quaternion,this.l=new THREE.Vector3,this.o=new THREE.Vector3,this.p=[],this.boneConstraints={head:{type:"ball",limit:60*Math.PI/180,twistAxis:new THREE.Vector3(0,1,0),twistLimit:60*Math.PI/180},neck:{type:"ball",limit:30*Math.PI/180,twistAxis:new THREE.Vector3(0,1,0),twistLimit:10*Math.PI/180},leftUpperLeg:{type:"ball",limit:170*Math.PI/180,twistAxis:new THREE.Vector3(0,-1,0),twistLimit:Math.PI/2},rightUpperLeg:{type:"ball",limit:170*Math.PI/180,twistAxis:new THREE.Vector3(0,-1,0),twistLimit:Math.PI/2},leftLowerLeg:{type:"hinge",axis:new THREE.Vector3(1,0,0),min:-170*Math.PI/180,max:0*Math.PI/180},rightLowerLeg:{type:"hinge",axis:new THREE.Vector3(1,0,0),min:-170*Math.PI/180,max:0*Math.PI/180}}}async init(t){this.model=t.scene,this.mixer=new THREE.AnimationMixer(this.model);let i=(t.userData.gltfExtensions||{}).VRM;if(!i)return this;let e=this.bones,s=await t.parser.getDependencies("node"),h=await t.parser.getDependencies("mesh");return Object.values(i.humanoid.humanBones).forEach(t=>{e[t.bone]=s[t.node]}),i.firstPerson&&i.firstPerson.firstPersonBone&&(this.firstPersonBone=s[i.firstPerson.firstPersonBone]),i.firstPerson&&i.firstPerson.meshAnnotations&&(this.p=i.firstPerson.meshAnnotations.map(t=>({flag:t.firstPersonFlag,mesh:h[t.mesh]}))),i.blendShapeMaster&&this.m(i.blendShapeMaster,h),i.secondaryAnimation&&this.u(i.secondaryAnimation,s),this.model.skeleton=new THREE.Skeleton(Object.values(e)),this}m(t,i){this.blendShapes=(t.blendShapeGroups||[]).reduce((t,e)=>{let s=e.binds.flatMap(t=>{let e=i[t.mesh];return(e.isSkinnedMesh?[e]:e.children.filter(t=>t.isSkinnedMesh)).map(i=>({target:i,index:t.index,weight:t.weight/100}))});return t[(e.presetName||e.name).toUpperCase()]={name:e.name,binds:s},t},{})}u(t,i){if(!globalThis.CANNON)return;console.log("init physics",t);let e=new CANNON.Quaternion,s=new CANNON.Quaternion,h=new CANNON.Vec3,l={world:null,objects:[],update(){let t=this.world.gravity,i=this.world.dt;for(let l of this.objects){let r=l.body,n=l.parentBody,a=r.force,o=r.mass,E=l.force;a.x+=o*(-t.x+E.x),a.y+=o*(-t.y+E.y),a.z+=o*(-t.z+E.z);let d=r.angularVelocity.length();d>.1&&r.angularVelocity.scale(.1/d,r.angularVelocity);let f=l.boneGroup.stiffiness,w=l.size*l.size*o*1600,p=r.quaternion.mult(n.quaternion.inverse(e),s),[m,u]=p.toAxisAngle(h),c=(u-=2*Math.PI*Math.floor((u+Math.PI)/(2*Math.PI)))*f;Math.abs(c)>Math.abs(u/i/i*25e-5)&&(c=u/i/i*25e-5);let R=m.scale(-c*w,m);r.torque.vadd(R,r.torque)}}},r=[],n=[],a=[],o=[];this.physics={world:null,fixedBinds:n,binds:r,bodies:a,constraints:o,springBoneSystem:l};for(let e of t.boneGroups){let t=(new CANNON.Vec3).copy(e.gravityDir||{x:0,y:-1,z:0}).scale(e.gravityPower||0);for(let s of e.bones){i[s].updateWorldMatrix(!0,!0);let h=new CANNON.Body({mass:0,collisionFilterGroup:0,collisionFilterMask:0});h.position.copy(i[s].getWorldPosition(this.l)),h.quaternion.copy(i[s].parent.getWorldQuaternion(this.h)),a.push(h);let E=(i,s,h)=>{let n=s.children.length+1,d=s.getWorldPosition(this.l),f=d.clone();s.children.length>0?s.children.forEach(t=>{d.add(t.getWorldPosition(this.o))}):(d.add(s.parent.getWorldPosition(this.o).sub(d).normalize().multiplyScalar(-.1).add(d)),n=2),d.multiplyScalar(1/n);let w=new CANNON.Body({mass:.5,linearDamping:Math.max(e.dragForce||0,1e-4),angularDamping:Math.max(e.dragForce||0,1e-4),collisionFilterGroup:this.collisionGroup,collisionFilterMask:~this.collisionGroup});w.position.copy(d),w.addShape(new CANNON.Sphere(e.hitRadius||.05)),a.push(w);let p=new CANNON.Vec3(0,0,0).copy(this.o.copy(f).sub(d)),m=new CANNON.Vec3(0,0,0).copy(f.sub(i.position)),u=new CANNON.PointToPointConstraint(w,p,i,m);o.push(u),r.push([s,w]),l.objects.push({body:w,parentBody:i,force:t,boneGroup:e,size:w.boundingRadius}),s.children.forEach(t=>t.isBone&&E(w,t,h+1))};E(h,i[s],0),n.push([i[s],h])}}}startPhysics(t){let i=this.physics;i&&!i.world&&(i.internalWorld=null==t,t=t||new CANNON.World,i.world=t,i.springBoneSystem.world=t,t.subsystems.push(i.springBoneSystem),i.bodies.forEach(i=>t.add(i)),i.constraints.forEach(i=>t.addConstraint(i)),this.resetPhysics())}stopPhysics(){let t=this.physics;t&&t.world&&(t.world.subsystems=t.world.subsystems.filter(i=>i!=t.springBoneSystem),t.world.constraints=t.world.constraints.filter(i=>!t.constraints.includes(i)),t.world.bodies=t.world.bodies.filter(i=>!t.bodies.includes(i)),t.world=null)}resetPhysics(){this.physics.fixedBinds.forEach(([t,i])=>{t.updateWorldMatrix(!0),i.position.copy(t.getWorldPosition(this.l)),i.quaternion.copy(t.parent.getWorldQuaternion(this.h))}),this.physics.binds.forEach(([t,i])=>{t.updateWorldMatrix(!0),i.position.copy(t.getWorldPosition(this.l)),i.quaternion.copy(t.getWorldQuaternion(this.h)),i.velocity.set(0,0,0),i.angularVelocity.set(0,0,0)})}R(t){this.physics.fixedBinds.forEach(([t,i])=>{i.position.copy(t.getWorldPosition(this.l)),i.quaternion.copy(t.parent.getWorldQuaternion(this.h))}),this.physics.internalWorld&&this.physics.world.step(1/60,t),this.physics.binds.forEach(([t,i])=>{t.quaternion.copy(i.quaternion).premultiply(t.parent.getWorldQuaternion(this.h).inverse())})}tick(t){if(this.mixer.update(t),this.lookAtTarget&&this.firstPersonBone){let t=this.firstPersonBone,i=t.worldToLocal(this.lookAtTarget.getWorldPosition(this.l)).normalize(),e=this.h.setFromUnitVectors(this.s,i),s=this.boneConstraints.head.limit,h=.08,l=2*Math.acos(e.w);l>1.5*s?(e=this.i,h=.04):l>s&&e.setFromAxisAngle(this.l.copy(e).normalize(),s),t.quaternion.slerp(e,h)}this.physics&&this.physics.world&&this.R(t)}setBlendShapeWeight(t,i){this.t[t]=i,0==i&&delete this.t[t],this.H()}getBlendShapeWeight(t){return this.t[t]||0}resetBlendShape(){this.t={},this.H()}startBlink(t){this.animatedMorph||(this.animatedMorph={name:"BLINK",times:[0,t-.2,t-.1,t],values:[0,0,1,0]},this.H())}stopBlink(){this.animatedMorph=null,this.H()}setFirstPerson(t){this.p.forEach(i=>{"ThirdPersonOnly"==i.flag?i.mesh.visible=!t:"FirstPersonOnly"==i.flag?i.mesh.visible=t:"Auto"==i.flag&&this.firstPersonBone&&(t?this.T(i.mesh):this.g(i.mesh))})}getPose(t){let i={};return i.bones=Object.keys(this.bones).map(t=>({name:t,q:this.bones[t].quaternion.toArray()})),t&&(i.blendShape=Object.keys(this.blendShapes).map(t=>({name:t,value:this.getBlendShapeWeight(t)}))),i}setPose(t){if(t.bones)for(let i of t.bones)this.bones[i.name]&&this.bones[i.name].quaternion.fromArray(i.q);if(t.blendShape)for(let i of t.blendShape)this.setBlendShapeWeight(i.name,i.value)}T(t){if(t.children.forEach(t=>this.T(t)),t.isSkinnedMesh){let i={};this.firstPersonBone.traverse(t=>{i[t.uuid]=!0});let e=t.skeleton.bones,s=t.geometry.attributes.skinIndex,h=t.geometry.attributes.skinWeight,l=t.geometry.index,r=[],n=0,a=0;for(let t=0;t<s.array.length;t++){h.array[t]>0&&i[e[s.array[t]].uuid]&&(r[t/s.itemSize|0]||(n++,r[t/s.itemSize|0]=!0))}let o=[];for(let t=0;t<l.count;t++)r[l.array[t]]&&!o[t/3|0]&&(o[t/3|0]=!0,a++);if(0==a)return;if(3*a==l.count)return void(t.visible=!1)}}g(t){t.children.forEach(t=>this.g(t)),t.visible=!0}H(){let t=[0];this.animatedMorph&&(t=this.animatedMorph.times,this.t[this.animatedMorph.name]=this.t[this.animatedMorph.name]||0);let i=Object.entries(this.t).reduce((i,[e,s])=>{let h=this.blendShapes[e];if(!h)return i;let l=new Array(t.length).fill(s);return this.animatedMorph&&this.animatedMorph.name==e&&(l=this.animatedMorph.values.map(t=>Math.max(t,s))),h.binds.forEach(t=>{let e=t.target.name,s=i[e]||(i[e]=new Array(t.target.morphTargetInfluences.length*l.length).fill(0));for(let i=0;i<l.length;i++)s[i*t.target.morphTargetInfluences.length+t.index]=t.weight*l[i]}),i},{}),e=Object.entries(i).map(([i,e])=>new THREE.NumberKeyframeTrack(i+".morphTargetInfluences",t,e));if(this.morphAction){let t=this.morphAction;setTimeout(()=>t.stop(),0)}if(0==e.length)return void(this.morphAction=null);let s=new THREE.AnimationClip("morph",void 0,e);this.morphAction=this.mixer.clipAction(s).setEffectiveWeight(1).play()}dispose(){this.stopPhysics(),this.physics=null,this.model.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose(),t.material&&t.material.map&&t.material.map.dispose(),t.skeleton&&t.skeleton.dispose()})}}AFRAME.registerComponent("vrm",{schema:{src:{default:""},firstPerson:{default:!1},blink:{default:!0},blinkInterval:{default:5},lookAt:{type:"selector"},enablePhysics:{default:!1}},init(){this.avatar=null},update(t){let i=this.el,e=this.data;e.src!==t.src&&(this.remove(),e.src&&new THREE.GLTFLoader(THREE.DefaultLoadingManager).load(e.src,async t=>{this.avatar=await(new VRMAvatar).init(t),i.setObject3D("avatar",this.avatar.model),this.M(),this.play(),i.emit("model-loaded",{format:"vrm",model:this.avatar.model,avatar:this.avatar},!1)},void 0,t=>{i.emit("model-error",{format:"vrm",src:e.src,cause:t},!1)})),this.M()},tick(t,i){this.avatar?this.avatar.tick(i/1e3):this.pause()},remove(){this.avatar&&(this.el.removeObject3D("avatar",this.avatar.model),this.avatar.dispose())},M(){if(!this.avatar)return;let t=this.data;if(this.avatar.setFirstPerson(t.firstPerson),this.avatar.lookAtTarget=t.lookAt?"A-CAMERA"==t.lookAt.tagName?this.el.sceneEl.camera:t.lookAt.object3D:null,t.blink?this.avatar.startBlink(t.blinkInterval):this.avatar.stopBlink(),t.enablePhysics){if(this.avatar.physics&&null==this.avatar.physics.world){let t=null;this.el.sceneEl.systems.physics&&this.el.sceneEl.systems.physics.driver&&(t=this.el.sceneEl.systems.physics.driver.world).bodies.forEach(t=>{1==t.collisionFilterGroup&&1==t.collisionFilterMask&&(t.collisionFilterMask=-1)}),this.avatar.startPhysics(t)}}else this.avatar.stopPhysics()}}),AFRAME.registerComponent("vrm-bvh",{schema:{src:{default:""},convertBone:{default:!0}},init(){this.avatar=null,this.el.components.vrm&&this.el.components.vrm.avatar&&(this.avatar=this.el.components.vrm.avatar),this.onVrmLoaded=(t=>{this.avatar=t.detail.avatar,""!=this.data.src?this.A(this.data.src,THREE.LoopRepeat):this.playTestMotion()}),this.el.addEventListener("model-loaded",this.onVrmLoaded)},update(t){t.src!=this.data.src&&this.avatar&&this.A(this.data.src,THREE.LoopRepeat)},playTestMotion(){let t=(t,i,e)=>(new THREE.Quaternion).setFromEuler(new THREE.Euler(t*Math.PI/180,i*Math.PI/180,e*Math.PI/180)),i={leftUpperArm:{keys:[{rot:t(0,0,65),time:0},{rot:t(0,0,60),time:1},{rot:t(0,0,65),time:2}]},rightUpperArm:{keys:[{rot:t(0,0,-65),time:0},{rot:t(0,0,-60),time:1},{rot:t(0,0,-65),time:2}]},spine:{keys:[{rot:t(0,2,0),time:0},{rot:t(0,0,-3),time:1},{rot:t(0,-2,0),time:2},{rot:t(0,0,3),time:3},{rot:t(0,2,0),time:4}]}},e=THREE.AnimationClip.parseAnimation({name:"testAnimation",hierarchy:Object.values(i)},Object.keys(i).map(t=>this.avatar.bones[t]||{name:t}));this.clip=e,this.animation=this.avatar.mixer.clipAction(e).setEffectiveWeight(1).play()},async A(t,i=THREE.LoopOnce){if(this.stopAnimation(),""===t)return;let{BVHLoader:e}=await import("https://threejs.org/examples/jsm/loaders/BVHLoader.js");(new e).load(t,t=>{this.avatar&&(this.data.convertBone&&this.convertClip(t.clip),t.clip.tracks=t.clip.tracks.filter(t=>!t.name.match(/position/)||t.name.match(this.avatar.bones.hips.name)),this.clip=t.clip,this.animation=this.avatar.mixer.clipAction(t.clip).setLoop(i).setEffectiveWeight(1).play())})},convertClip(t){t.tracks.forEach(t=>{t.name=t.name.replace(/bones\[(\w+)\]/,(t,i)=>{i=(i=(i=(i=(i=(i=(i=(i=(i=(i=(i=(i=(i=(i=(i=(i=i.replace("Spin1","Spin")).replace("Chest1","Chest")).replace("Chest2","UpperChest")).replace("UpLeg","UpperLeg")).replace("LeftLeg","LeftLowerLeg")).replace("RightLeg","RightLowerLeg")).replace("ForeArm","UpperArm")).replace("LeftArm","LeftLowerArm")).replace("RightArm","RightLowerArm")).replace("Collar","Shoulder")).replace("Elbow","LowerArm")).replace("Wrist","Hand")).replace("LeftHip","LeftUpperLeg")).replace("RightHip","RightUpperLeg")).replace("Knee","LowerLeg")).replace("Ankle","Foot");let e=this.avatar.bones[i.charAt(0).toLowerCase()+i.slice(1)];return"bones["+(null!=e?e.name:"NOT_FOUND")+"]"}),t.name=t.name.replace("ToeBase","Foot"),t.name.match(/quaternion/)&&(t.values=t.values.map((t,i)=>i%2==0?-t:t)),t.name.match(/position/)&&(t.values=t.values.map((t,i)=>.09*(i%3==1?t:-t)))}),t.tracks=t.tracks.filter(t=>!t.name.match(/NOT_FOUND/))},stopAnimation(){this.animation&&(this.animation.stop(),this.avatar.mixer.uncacheClip(this.clip))},remove(){this.el.removeEventListener("model-loaded",this.onVrmLoaded),this.stopAnimation(),this.avatar=null}}),AFRAME.registerComponent("vrm-skeleton",{schema:{physicsOffset:{type:"vec3",default:{x:1,y:0,z:0}}},init(){this.physicsBodies=[],this.sceneObj=this.el.sceneEl.object3D,this.el.components.vrm&&this.el.components.vrm.avatar&&this.v(this.el.components.vrm.avatar),this.onVrmLoaded=(t=>this.v(t.detail.avatar)),this.el.addEventListener("model-loaded",this.onVrmLoaded)},v(t){this.helper&&this.sceneObj.remove(this.helper),this.helper=new THREE.SkeletonHelper(t.model),this.sceneObj.add(this.helper),this.L(t)},L(t){if(this.N(),!t.physics||!t.physics.world)return;let i=new THREE.SphereGeometry(1,4,3),e=new THREE.MeshBasicMaterial({color:new THREE.Color("red"),wireframe:!0});t.physics.bodies.forEach(t=>{let s=new THREE.Mesh(i,e);s.scale.multiplyScalar(t.boundingRadius),this.sceneObj.add(s),this.physicsBodies.push([t,s])})},N(){this.physicsBodies.forEach(([t,i])=>i.parent.remove(i)),this.physicsBodies=[]},tick(){this.physicsBodies.forEach(([t,i])=>{i.position.copy(t.position).add(this.data.physicsOffset),i.quaternion.copy(t.quaternion)})},remove(){this.el.removeEventListener("model-loaded",this.onVrmLoaded),this.N(),this.helper&&this.sceneObj.remove(this.helper)}}),AFRAME.registerComponent("vrm-poser",{schema:{color:{default:"#00ff00"},enableConstraints:{default:!0}},init(){this.binds=[],this.l=new THREE.Vector3,this.o=new THREE.Vector3,this.h=new THREE.Quaternion,this.O=new THREE.Quaternion,this.C=new THREE.Matrix4,this.el.components.vrm&&this.el.components.vrm.avatar&&this.v(this.el.components.vrm.avatar),this.onVrmLoaded=(t=>this.v(t.detail.avatar)),this.el.addEventListener("model-loaded",this.onVrmLoaded)},remove(){this.el.removeEventListener("model-loaded",this.onVrmLoaded),this._()},getPoseData(t){if(this.avatar)return this.avatar.getPose(t)},setPoseData(t){this.avatar&&(this.avatar.setPose(t),this.P())},v(t){this._(),this.avatar=t;let i=new THREE.BoxGeometry(1,1,1),e=new THREE.MeshBasicMaterial({color:new THREE.Color(this.data.color)});e.depthTest=!1,e.transparent=!0,e.opacity=.4;let s=this.l,h=this.o,l=this.C,r=this.h,n=t.bones.hips,a={};for(let o of Object.keys(t.bones)){let E=t.bones[o],d=E==n,f=new THREE.Mesh(i,e),w=document.createElement("a-entity");w.classList.add("collidable"),w.setAttribute("xy-drag-control",{}),w.setObject3D("handle",f);let p=w.object3D,m=E.children.reduce((t,i)=>Math.min(t,i.position.length()),E.position.length());p.scale.multiplyScalar(Math.max(Math.min(m/2,.05),.01)),a[E.uuid]=o,w.addEventListener("mousedown",t=>{this.el.emit("vrm-poser-select",{name:o,node:E})});let u=E.parent;for(;!a[u.uuid]&&u.parent&&u.parent.isBone;)u=u.parent;w.addEventListener("xy-drag",i=>{if(d){let i=p.parent.worldToLocal(E.getWorldPosition(s)).sub(p.position);t.model.position.sub(i)}u.updateMatrixWorld(!1),p.updateMatrixWorld(!1),l.getInverse(u.matrixWorld).multiply(p.matrixWorld).decompose(h,r,s),E.quaternion.copy(this.F(o,r)),r.setFromUnitVectors(s.copy(E.position).normalize(),h.normalize()),1==u.children.length&&(u.quaternion.multiply(r),this.F(a[u.uuid],u.quaternion)),this.P(d?null:E)}),w.addEventListener("xy-dragend",t=>{this.P(),console.log(u.name,o)}),this.el.appendChild(w),this.binds.push([E,p])}this.P()},F(t,i){if(!this.data.enableConstraints)return i;let e=this.O,s=this.l,h=this.avatar.boneConstraints[t];if(h&&"ball"==h.type){let t=2*Math.acos(i.w);if(h.twistAxis){let l=t*Math.acos(i.w)*s.copy(i).normalize().dot(h.twistAxis);if(l=this.U(l),Math.abs(l)>h.twistLimit){i.multiply(e.setFromAxisAngle(h.twistAxis,-(l<0?l+h.twistLimit:l-h.twistLimit))),t=2*Math.acos(i.w)}}Math.abs(this.U(t))>h.limit&&i.setFromAxisAngle(s.copy(i).normalize(),h.limit)}else if(h&&"hinge"==h.type){let t=(h.min+h.max)/2,e=2*Math.acos(i.w)*s.copy(i).normalize().dot(h.axis);e=THREE.MathUtils.clamp(this.U(e-t),h.min-t,h.max-t),i.setFromAxisAngle(h.axis,e+t)}return i},U:t=>t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI)),_(){this.binds.forEach(([t,i])=>{this.el.removeChild(i.el);let e=i.el.getObject3D("handle");e&&(e.material.dispose(),e.geometry.dispose()),i.el.destroy()}),this.binds=[]},P(t){let i=this.l,e=this.el.object3D;e.updateMatrixWorld(!1);let s=(new THREE.Matrix4).getInverse(e.matrixWorld);this.binds.forEach(([e,h])=>{let l=e==t?i:h.position;e.updateMatrixWorld(!1),h.matrix.copy(e.matrixWorld).premultiply(s).decompose(l,h.quaternion,i)})}});class IKNode{constructor(t,i,e){this.position=t,this.quaternion=new THREE.Quaternion,this.worldMatrix=new THREE.Matrix4,this.worldPosition=new THREE.Vector3,this.constraint=i,this.userData=e}}class IKSolver{constructor(){this.iterationLimit=50,this.thresholdSq=1e-4,this.k=new THREE.Vector3(1,1,1),this.l=new THREE.Vector3,this.o=new THREE.Vector3,this.B=new THREE.Vector3,this.h=new THREE.Quaternion,this.O=new THREE.Quaternion}j(t,i){for(let e of t)e.worldMatrix.compose(e.position,e.quaternion,this.k).premultiply(i),e.worldPosition.setFromMatrixPosition(e.worldMatrix),i=e.worldMatrix}solve(t,i,e){this.j(t,e);let s=t[t.length-1].worldPosition,h=s.distanceToSquared(i),l=this.B,r=this.o,n=this.O;for(let h=0;h<this.iterationLimit&&!(s.distanceToSquared(i)<this.thresholdSq);h++){let s=this.l.copy(i);for(let i=t.length-2;i>=0;i--){let e=t[i],h=t[i+1].position;e.worldMatrix.decompose(this.o,this.h,this.B),l.copy(s).sub(this.o).applyQuaternion(n.copy(this.h).inverse()).normalize(),r.copy(h).normalize(),n.setFromUnitVectors(r,l),e.quaternion.multiply(n);let a=r.copy(h).applyQuaternion(this.h.multiply(n));e.constraint&&(n.copy(e.quaternion).inverse(),e.constraint.apply(e)&&(n.premultiply(e.quaternion),a.copy(h).applyQuaternion(this.h.multiply(n)))),s.sub(a)}this.j(t,e)}return s.distanceToSquared(i)<h}}AFRAME.registerComponent("vrm-mimic",{schema:{leftHandTarget:{type:"selector",default:""},leftHandOffsetPosition:{type:"vec3"},leftHandOffsetRotation:{type:"vec3",default:{x:0,y:-Math.PI/2,z:0}},rightHandTarget:{type:"selector",default:""},rightHandOffsetPosition:{type:"vec3"},rightHandOffsetRotation:{type:"vec3",default:{x:0,y:Math.PI/2,z:0}},leftLegTarget:{type:"selector",default:""},rightLegTarget:{type:"selector",default:""},headTarget:{type:"selector",default:""},avatarOffset:{type:"vec3",default:{x:0,y:0,z:0}}},init(){this.l=new THREE.Vector3,this.o=new THREE.Vector3,this.h=new THREE.Quaternion,this.O=new THREE.Quaternion,this.C=new THREE.Matrix4,this.targetEls=[],this.el.components.vrm&&this.el.components.vrm.avatar&&this.v(this.el.components.vrm.avatar),this.onVrmLoaded=(t=>this.v(t.detail.avatar)),this.el.addEventListener("model-loaded",this.onVrmLoaded)},update(){this.headTarget=this.data.headTarget?"A-CAMERA"==this.data.headTarget.tagName?this.el.sceneEl.camera:this.data.headTarget.object3D:null,this.rightHandOffset=(new THREE.Matrix4).compose(this.data.rightHandOffsetPosition,(new THREE.Quaternion).setFromEuler((new THREE.Euler).setFromVector3(this.data.rightHandOffsetRotation)),new THREE.Vector3(1,1,1)),this.leftHandOffset=(new THREE.Matrix4).compose(this.data.leftHandOffsetPosition,(new THREE.Quaternion).setFromEuler((new THREE.Euler).setFromVector3(this.data.leftHandOffsetRotation)),new THREE.Vector3(1,1,1))},v(t){this.avatar=t;for(let t of this.targetEls)this.el.removeChild(t);this.targetEls=[],this.update(),this.S(t)},S(t){let i=new IKSolver;this.qbinds=[];let e=(i,e,s)=>{null==e&&((e=document.createElement("a-box")).classList.add("collidable"),e.setAttribute("xy-drag-control",{}),e.setAttribute("geometry",{width:.05,depth:.05,height:.05}),e.setAttribute("material",{color:"blue",depthTest:!1,transparent:!0,opacity:.4}),this.el.appendChild(e),this.targetEls.push(e));let h=(i=i.filter(i=>t.bones[i])).map(i=>t.bones[i]),l=h.map((e,s)=>{let l=0==s?e.position:((t,i)=>i.worldToLocal(t.getWorldPosition(new THREE.Vector3)))(e,h[s-1]),r=t.boneConstraints[i[s]];return new IKNode(l,r?{apply:t=>this.F(r,t.quaternion)}:null,e)});return this.qbinds.push([h[h.length-1],e.object3D,s]),{root:h[0],ikbones:l,bones:h,target:e.object3D}};this.chains=[e(["leftUpperArm","leftLowerArm","leftHand"],this.data.leftHandTarget,this.leftHandOffset),e(["rightUpperArm","rightLowerArm","rightHand"],this.data.rightHandTarget,this.rightHandOffset),e(["leftUpperLeg","leftLowerLeg","leftFoot"],this.data.leftLegTarget),e(["rightUpperLeg","rightLowerLeg","rightFoot"],this.data.rightLegTarget)],this.simpleIK=i},F(t,i){let e=this.O,s=this.l,h=!1;if(t&&"ball"==t.type){let l=2*Math.acos(i.w);if(t.twistAxis){let r=l*Math.acos(i.w)*s.copy(i).normalize().dot(t.twistAxis);if(r=this.U(r),Math.abs(r)>t.twistLimit){i.multiply(e.setFromAxisAngle(t.twistAxis,-(r<0?r+t.twistLimit:r-t.twistLimit))),l=2*Math.acos(i.w),h=!0}}Math.abs(this.U(l))>t.limit&&(i.setFromAxisAngle(s.copy(i).normalize(),t.limit),h=!0)}else if(t&&"hinge"==t.type){let e=(t.min+t.max)/2,l=s.copy(i).normalize().dot(t.axis),r=2*Math.acos(i.w)*l;r=THREE.MathUtils.clamp(this.U(r-e),t.min-e,t.max-e),i.setFromAxisAngle(t.axis,r+e),h=!0}return h},U:t=>t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI)),tick(t,i){if(this.avatar){if(this.headTarget){let t=this.headTarget.getWorldPosition(this.l),i=this.headTarget.getWorldQuaternion(this.h);t.y=0,this.avatar.model.position.copy(t.add(this.data.avatarOffset));let e=this.avatar.firstPersonBone;if(e){let t=this.O.setFromRotationMatrix(e.parent.matrixWorld).inverse();e.quaternion.copy(i.premultiply(t))}}if(this.simpleIK){let t=(new THREE.Matrix4).getInverse(this.el.object3D.matrixWorld);for(let i of this.chains){let e=i.root.parent.matrixWorld.clone().premultiply(t);this.simpleIK.solve(i.ikbones,i.target.position,e),i.ikbones.forEach((t,e)=>{if(e==i.ikbones.length-1)return;let s=t.userData.quaternion.angleTo(t.quaternion);s>.2?t.userData.quaternion.slerp(t.quaternion,.2/s):t.userData.quaternion.copy(t.quaternion)})}this.qbinds.forEach(([t,i,e])=>{let s=e?i.matrixWorld.clone().multiply(e):i.matrixWorld,h=this.h.setFromRotationMatrix(t.parent.matrixWorld).inverse();t.quaternion.copy(this.O.setFromRotationMatrix(s).premultiply(h))})}}},remove(){this.el.removeEventListener("model-loaded",this.onVrmLoaded);for(let t of this.targetEls)this.el.removeChild(t)}});